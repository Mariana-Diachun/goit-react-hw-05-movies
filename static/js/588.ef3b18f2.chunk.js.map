{"version":3,"file":"static/js/588.ef3b18f2.chunk.js","mappings":"yPAEaA,EAAe,mCAAG,WAAMC,GAAN,gGAEJC,EAAAA,GAAAA,IAAA,iBACXD,EADW,sDAFI,cAErBE,EAFqB,yBAKpBA,EAASC,MALW,gCAO3BC,QAAQC,IAAI,KAAMC,SAPS,yDAAH,sD,kBCAfC,EAAOC,EAAAA,GAAAA,IAAH,kEAKJC,EAAQD,EAAAA,GAAAA,GAAH,+C,SCwBlB,EA5BoB,SAAC,GAAiB,IAAfE,EAAc,EAAdA,QACrB,OACE,wBACGA,EAAQC,KAAI,SAAAC,GACX,OACE,2BACE,UAACL,EAAD,YACE,SAACE,EAAD,4BACA,uBAAIG,EAAOC,aAEb,uBAAID,EAAOE,YALJF,EAAOG,GAQnB,KAGN,ECGD,EAjBgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAON,EAAP,KAAgBO,EAAhB,KACQjB,GAAYkB,EAAAA,EAAAA,MAAZlB,QAQR,OANAmB,EAAAA,EAAAA,YAAU,WACRpB,EAAgBC,GAASoB,MAAK,SAAAjB,GAC5Bc,EAAWd,EAAKkB,QACjB,GACF,GAAE,CAACrB,IAEGU,EAAQY,OAAS,GACtB,SAAC,EAAD,CAAaZ,QAASA,KAEtB,yCAEH,C","sources":["services/getMovieReviews.js","components/ReviewsList/ReviewsList.styled.js","components/ReviewsList/ReviewsList.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?api_key=ae750ece0804f05464dc1609a148e97e`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Title = styled.h4`\n  margin-right: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { Wrap, Title } from 'components/ReviewsList/ReviewsList.styled';\n\nconst ReviewsList = ({ reviews }) => {\n  return (\n    <ul>\n      {reviews.map(review => {\n        return (\n          <li key={review.id}>\n            <Wrap>\n              <Title>Author name:</Title>\n              <p>{review.author}</p>\n            </Wrap>\n            <p>{review.content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nReviewsList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ReviewsList;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/getMovieReviews';\nimport ReviewsList from 'components/ReviewsList/ReviewsList';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(data => {\n      setReviews(data.results);\n    });\n  }, [movieId]);\n\n  return reviews.length > 0 ? (\n    <ReviewsList reviews={reviews} />\n  ) : (\n    <p>No reviews yet</p>\n  );\n};\n\nexport default Reviews;\n"],"names":["getMovieReviews","movieId","axios","response","data","console","log","message","Wrap","styled","Title","reviews","map","review","author","content","id","useState","setReviews","useParams","useEffect","then","results","length"],"sourceRoot":""}