{"version":3,"file":"static/js/887.2f0b4c4f.chunk.js","mappings":"qPAEaA,EAAMC,EAAAA,GAAAA,IAAH,0CAGHC,EAAOD,EAAAA,GAAAA,KAAH,sBAEJE,EAAQF,EAAAA,GAAAA,MAAH,yMAYLG,EAASH,EAAAA,GAAAA,OAAH,gV,SC+BnB,MAxCA,YAAkC,IAAbI,EAAY,EAAZA,SACnB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BC,EAAAA,EAAAA,UAASF,EAAaG,IAAI,UAApD,eAAOC,EAAP,KAAcC,EAAd,KAmBA,OACE,SAACZ,EAAD,WACE,UAACE,EAAD,CAAMG,SAfV,SAAsBQ,GAEpB,GADAA,EAAMC,iBACQ,KAAVH,EAAJ,CAIA,IAAMI,EAAWF,EAAMG,cAAcC,SAASN,MAAMO,MACpDN,EAASG,GACTP,EAAgB,CAAEG,MAAOI,IACzBV,EAASU,GACTH,EAAS,GALR,MAFCO,MAAM,sBAQT,EAIG,WACE,SAAChB,EAAD,CACEiB,KAAK,OACLC,KAAK,QACLV,MAAOA,EACPW,SAxBiB,SAAAT,GACvBD,EAASC,EAAMG,cAAcE,MAAMK,cACpC,KAwBK,SAACnB,EAAD,CAAQgB,KAAK,SAAb,6BAIP,E,mCC1CDI,EAAAA,GAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAU,mCAAG,WAAMd,GAAN,gGAGCa,EAAAA,GAAAA,IAAA,qFACyDb,EADzD,gCAHD,cAGhBe,EAHgB,yBAOfA,EAASC,MAPM,gCAStBC,QAAQC,IAAI,KAAMC,SATI,yDAAH,sDCiBvB,EAlB2B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC5B,OACE,wBACGA,EAAMC,KAAI,SAAAC,GACT,OACE,yBACE,UAAC,KAAD,CAAMC,GAAE,UAAKD,EAAKE,IAAlB,UAAyBF,EAAKG,MAA9B,QADOH,EAAKE,GAIjB,KAGN,ECaD,EAvBe,WACb,OAAoC1B,EAAAA,EAAAA,UAAS,IAA7C,eAAO4B,EAAP,KAAmBC,EAAnB,KACA,GAA0B7B,EAAAA,EAAAA,UAAS,IAAnC,eAAOsB,EAAP,KAAcQ,EAAd,KAcA,OARAC,EAAAA,EAAAA,YAAU,WACW,KAAfH,GAEJZ,EAAWY,GAAYI,MAAK,SAAAd,GAC1BY,GAAS,OAAIZ,EAAKe,SACnB,GACF,GAAE,CAACL,KAGF,4BACE,SAAC,EAAD,CAAWhC,SAdU,SAAAM,GACvB2B,EAAc3B,EACf,KAaG,SAAC,EAAD,CAAoBoB,MAAOA,MAGhC,C","sources":["components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","services/fetchFilms.js","components/MoviesListBySearch/MoviesListBySearch.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Box = styled.div`\n  display: flex;\n`;\nexport const Form = styled.form``;\n\nexport const Input = styled.input`\n  box-sizing: border-box;\n  width: 220px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  outline: none;\n  &:hover,\n  &:focus {\n    border-color: red;\n  }\n  padding: 5px;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  margin-top: 30px;\n  margin-left: 10px;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.88;\n  letter-spacing: 0.06em;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  &:hover,\n  &:focus {\n    border-color: red;\n  }\n  cursor: pointer;\n  width: 100px;\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSearchParams } from 'react-router-dom';\nimport {\n  Input,\n  Button,\n  Box,\n  Form,\n} from 'components/SearchBar/SearchBar.styled';\n\nfunction SearchBar({ onSubmit }) {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState(searchParams.get('query'));\n\n  const handleNameChange = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (query === '') {\n      alert('Please enter a word');\n      return;\n    }\n    const newQuery = event.currentTarget.elements.query.value;\n    setQuery(newQuery);\n    setSearchParams({ query: newQuery });\n    onSubmit(newQuery);\n    setQuery('');\n  }\n\n  return (\n    <Box>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          name=\"query\"\n          query={query}\n          onChange={handleNameChange}\n        />\n        <Button type=\"submit\">Search film</Button>\n      </Form>\n    </Box>\n  );\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchFilms = async query => {\n  //   console.log(query);\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=ae750ece0804f05464dc1609a148e97e&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MoviesListBySearch = ({ films }) => {\n  return (\n    <ul>\n      {films.map(item => {\n        return (\n          <li key={item.id}>\n            <Link to={`${item.id}`}>{item.title} </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMoviesListBySearch.propTypes = {\n  films: PropTypes.array,\n};\n\nexport default MoviesListBySearch;\n","import { useState, useEffect } from 'react';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport { fetchFilms } from 'services/fetchFilms';\nimport MoviesListBySearch from 'components/MoviesListBySearch/MoviesListBySearch';\n\nconst Movies = () => {\n  const [filmSearch, setFilmSearch] = useState('');\n  const [films, setFilms] = useState([]);\n\n  const handleFormSubmit = query => {\n    setFilmSearch(query);\n  };\n\n  useEffect(() => {\n    if (filmSearch === '') return;\n\n    fetchFilms(filmSearch).then(data => {\n      setFilms([...data.results]);\n    });\n  }, [filmSearch]);\n\n  return (\n    <div>\n      <SearchBar onSubmit={handleFormSubmit} />\n      <MoviesListBySearch films={films} />\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["Box","styled","Form","Input","Button","onSubmit","useSearchParams","searchParams","setSearchParams","useState","get","query","setQuery","event","preventDefault","newQuery","currentTarget","elements","value","alert","type","name","onChange","toLowerCase","axios","fetchFilms","response","data","console","log","message","films","map","item","to","id","title","filmSearch","setFilmSearch","setFilms","useEffect","then","results"],"sourceRoot":""}