{"version":3,"file":"static/js/449.3035d0cc.chunk.js","mappings":"sKAAO,IAAMA,EAAU,4B,8ICEvBC,EAAAA,GAAAA,SAAAA,QAAyB,gCAElB,I,cAAMC,EAAe,mCAAG,WAAMC,GAAN,gGAEJF,EAAAA,GAAAA,IAAA,gBACZE,EADY,8CAFI,cAErBC,EAFqB,yBAKpBA,EAASC,MALW,gCAQ3BC,QAAQC,IAAI,KAAMC,SARS,yDAAH,sD,2BCDfC,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iP,kBCSvB,EATiB,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SACtB,OACE,UAACJ,EAAD,CAAYG,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,ECRYE,EAAUL,EAAAA,GAAAA,IAAH,4DAKPM,EAAMN,EAAAA,GAAAA,IAAH,0CAIHO,EAAUP,EAAAA,GAAAA,IAAH,8CAIPQ,EAAiBR,EAAAA,GAAAA,IAAH,0JAQdS,EAAOT,EAAAA,GAAAA,EAAH,+CAIJU,EAAQV,EAAAA,GAAAA,GAAH,uC,SCsDlB,EAlEqB,WAAO,IAAD,IACzB,GAAwCW,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACQtB,GAAYuB,EAAAA,EAAAA,MAAZvB,QAEFwB,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,SAA4B,GAE9CC,EAAAA,EAAAA,YAAU,WACR7B,EAAgBC,GAAS6B,MAAK,SAAA3B,GAC5BkB,EAAgBlB,GAChBoB,EAAUpB,EAAKmB,OAChB,GACF,GAAE,CAACrB,IAEJ,IAIM8B,EAHGT,EAAOU,KAAI,SAAAD,GAAK,OAAIA,EAAME,IAAV,IAAgBC,KAAK,MAIxCC,EAAOC,KAAKC,MAAkC,GAA5BjB,EAAakB,cAMrC,OAAO,SAACC,EAAA,EAAD,KACL,UAACzB,EAAD,YAIE,SAAC,EAAD,CAAUJ,GAAIe,EAAd,sBACA,UAACZ,EAAD,YACE,gBAAK2B,IAAG,UAAK1C,EAAAA,EAAL,gBAAoBsB,EAAaqB,aAAeC,IAAI,MAC5D,UAAC3B,EAAD,YACE,SAACG,EAAD,UAAQE,EAAauB,SACrB,wCACA,6BAAKvB,EAAawB,aAClB,yCACA,6BAAKT,EAAL,SACA,qCACA,uBAAIJ,WAGR,UAACf,EAAD,YACE,oDACA,yBACE,SAAC,KAAD,CAAMN,GAAG,OAAT,UACE,SAACO,EAAD,yBAGJ,yBACE,SAAC,KAAD,CAAMP,GAAG,UAAT,UACE,SAACO,EAAD,4BAIJ,SAAC,EAAA4B,SAAD,CAAUC,UAAU,SAACP,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,aAKN,SAACA,EAAA,EAAD,GAEH,C","sources":["constans/imgUrl.js","services/getMovieDetails.js","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["export const IMG_URL = 'https://image.tmdb.org/t/p';\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}?api_key=ae750ece0804f05464dc1609a148e97e`\n    );\n    return response.data;\n    // console.log(response.data);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { StyledLink } from 'components/BackLink/BackLink.styled';\nimport { FiArrowLeft } from 'react-icons/fi';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <FiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nexport default BackLink;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  padding: 15px;\n`;\n\nexport const Box = styled.div`\n  padding: 10px;\n`;\n\nexport const InfoBox = styled.div`\n  margin-left: 20px;\n`;\n\nexport const AdditionalInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  border-top: 1px solid black;\n  border-bottom: 1px solid black;\n`;\n\nexport const Info = styled.b`\n  margin-right: 20px;\n`;\n\nexport const Title = styled.h1`\n  color: red;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from 'services/getMovieDetails';\nimport { IMG_URL } from 'constans/imgUrl';\nimport BackLink from 'components/BackLink/BackLink';\nimport {\n  Wrapper,\n  Box,\n  InfoBox,\n  AdditionalInfo,\n  Info,\n  Title,\n} from 'pages/MovieDetails/MovieDetails.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState({});\n  const [genres, setGenres] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? -1;\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(data => {\n      setMovieDetails(data);\n      setGenres(data.genres);\n    });\n  }, [movieId]);\n\n  const getGenresName = () => {\n    return genres.map(genre => genre.name).join(', ');\n  };\n\n  const genre = getGenresName();\n  const vote = Math.floor(movieDetails.vote_average * 10);\n\n  // const goBack = () => {\n  //   navigate(-1);\n  // };\n\n  return <Loader /> ? (\n    <Box>\n      {/* <button type=\"button\" onClick={goBack}>\n        Go back\n      </button> */}\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      <Wrapper>\n        <img src={`${IMG_URL}/w300${movieDetails.poster_path}`} alt=\"\" />\n        <InfoBox>\n          <Title>{movieDetails.title}</Title>\n          <h3>Overview :</h3>\n          <p> {movieDetails.overview}</p>\n          <h3>User score:</h3>\n          <p> {vote} %</p>\n          <h3>Genres:</h3>\n          <p>{genre}</p>\n        </InfoBox>\n      </Wrapper>\n      <AdditionalInfo>\n        <h2>Additional information</h2>\n        <li>\n          <Link to=\"cast\">\n            <Info>Cast:</Info>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">\n            <Info>Reviews:</Info>\n          </Link>\n        </li>\n\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </AdditionalInfo>\n    </Box>\n  ) : (\n    <Loader />\n  );\n};\n\nexport default MovieDetails;\n"],"names":["IMG_URL","axios","getMovieDetails","movieId","response","data","console","log","message","StyledLink","styled","Link","to","children","size","Wrapper","Box","InfoBox","AdditionalInfo","Info","Title","useState","movieDetails","setMovieDetails","genres","setGenres","useParams","backLinkHref","useLocation","state","from","useEffect","then","genre","map","name","join","vote","Math","floor","vote_average","Loader","src","poster_path","alt","title","overview","Suspense","fallback"],"sourceRoot":""}